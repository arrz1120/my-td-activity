using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Text;
using TuanDai.ActivitySystem.BLL;
using TuanDai.ActivitySystem.Model;
using System.Data;
using Dapper;

namespace TuanDai.WXApiWeb.Activity
{
    public partial class index : BasePage
    { 
        protected WXAcivityList model;
        protected static int PageSize = 15;
        protected static int type = 4;
        protected string StatusStr = "";
        
        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
                this.GetData();
            }
        }

        private void GetData()
        {
            model = GetActivityList(1, PageSize, type);
            int recordCount = model.TotalCount; 
        }  
        /// <summary>
        /// 把字符串中的英文双引号替换成中文
        /// </summary>
        /// <param name="pStr">替换前字符串</param>
        /// <returns>返回替换后的字符串</returns>
        protected  string StrReplace(string pStr)
        {
            //把字符串按照双引号截成数组
            string[] str = pStr.Split('\"');
            //替换后的字符串
            string Newstr = "";
            for (int i = 1; i <= str.Length; i++)
            {
                if (i % 2 == 0)
                {
                    Newstr += str[i - 1] + "”";
                }
                else
                {
                    Newstr += str[i - 1] + "“";
                }
            }
            return Newstr.Substring(0, Newstr.Length - 1);

        }

        /// <summary>
        /// 得到活动状态
        /// </summary>
        /// <param name="Status"></param>
        /// <returns></returns>
        protected static string GetStatus(object SDate, object EDate)
        {
            string returnStatus = string.Empty;
            DateTime StartDate, EndDate;
            if (SDate == null)
                return "未设置开始时间";
            else
                StartDate = Convert.ToDateTime(SDate);

            if (EDate == null)
                EndDate = Convert.ToDateTime(SDate).AddDays(30);
            else
                EndDate = Convert.ToDateTime(EDate);

            if (DateTime.Now < Convert.ToDateTime(StartDate.ToString()))
                returnStatus = "敬请期待";
            else if (DateTime.Now <= Convert.ToDateTime(EndDate.ToString("yyyy/MM/dd 23:59:59")))
                returnStatus = "我要参加";
            else
                returnStatus = "已结束";

            return returnStatus;
        }

        /// <summary>
        /// 获取进行中的活动信息
        /// </summary>
        /// <param name="pageIndex">页数</param>
        /// <param name="pageSize">条数</param>
        /// <param name="typeId">类型：0-所有，1-线上活动，2-线下活动,3-要客来访</param>
        /// <returns></returns>
        public static WXAcivityList GetActivityList(int pageIndex, int pageSize, int typeId = 0)
        {
            List<ActivityInfo> list = new List<ActivityInfo>();
            WXAcivityList billResponse = new WXAcivityList();

            var paras = new DynamicParameters();
            paras.Add("@pageIndex", pageIndex);
            paras.Add("@pageSize", pageSize);
            paras.Add("@TypeId", typeId);
            paras.Add("@total", 0, DbType.Int32, ParameterDirection.Output);
            string sqlText = string.Empty;

            sqlText = @"SELECT @total=COUNT(1) FROM( SELECT 1 AS cnt FROM dbo.Activity A
                            WHERE A.TypeId in(1,3,4) ) AS main;
                        WITH oa AS(
                        SELECT ROW_NUMBER() OVER(ORDER BY  (CASE WHEN GETDATE()<EndDate THEN 0 ELSE 1 END),SortOrder DESC,EndDate DESC) RowNum,Title, TypeId, Summary, Content, StartDate, EndDate,CreateDate, ImageUrl, LinkUrl, Status
                        FROM Activity WHERE Status=1 AND TypeId in(1,3,4)) SELECT * FROM oa
                        WHERE RowNum between (@pageIndex-1)*@pageSize+1 and @pageIndex*@pageSize";
            List<ActivityInfo> tmplist = PublicConn.QueryActivityBySql<ActivityInfo>(sqlText, ref paras);
            foreach (ActivityInfo Item in tmplist)
            {
                string strStatus = GetStatus(Item.StartDate, Item.EndDate);
                if (strStatus == "敬请期待" || strStatus == "我要参加")
                {
                    list.Add(Item);
                }
            }
            billResponse.List = list;
            billResponse.TotalCount = paras.Get<int>("@total");
            if (billResponse.TotalCount > 0)
                billResponse.result = "1";
            else
                billResponse.result = "2";
            return billResponse;
        }
        public class WXAcivityList
        {
            public string result { get; set; }
            public List<ActivityInfo> List { get; set; }
            public int TotalCount { get; set; }
        }
    }
}