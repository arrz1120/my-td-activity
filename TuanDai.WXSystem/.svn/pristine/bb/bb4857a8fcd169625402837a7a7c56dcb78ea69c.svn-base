using System;
using System.Web;
using System.Linq;
using System.Web.SessionState;
using Tool;
using System.Text;
using System.Collections.Generic;
using System.Data.SqlClient;
using Kamsoft.Data.Dapper;
using System.Data;
using TuanDai.WXApiWeb.Member.UserPrize;
using TuanDai.WXSystem.Core;
using TuanDai.PortalSystem.Model;
using TuanDai.PortalSystem.BLL;
using System.Data.Objects;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using TuanDai.PortalSystem.DAL;


namespace TuanDai.WXApiWeb.ajaxCross
{
    /// <summary>
    /// 团宝箱
    /// </summary>
    public class ajax_userPrize : SafeHandlerBase
    {
        private int pagesize = 10;
        private int totalItemCount = 0;
        UserBLL bll = new UserBLL();
        Guid UserId = WebUserAuth.UserId.Value;
        /// <summary>
        /// 获奖记录
        /// </summary>
        public void GetPrizeLog()
        {
            int pageindex = Tool.SafeConvert.ToInt32(Context.Request.Form["pageIndex"], 1);
            string orderField = Tool.SafeConvert.ToString(WEBRequest.GetString("orderField"), "CreateDate");
            string orderType = Tool.SafeConvert.ToString(WEBRequest.GetString("orderType"), "desc");
            int isUsed = Tool.SafeConvert.ToInt32(WEBRequest.GetString("isUsed"), 1);
            if (pageindex < 1)
            {
                pageindex = 1;
            }
            StringBuilder sb = new StringBuilder();
            List<WXUserPrizeListInfo> list = WXGetUserPrizeList(UserId, "", pageindex, pagesize, orderField, orderType, isUsed, out totalItemCount).ToList();

            int pageCount = GetPageCount();

            if (list != null && list.Count() > 0)
            {
                int index = 1;
                sb.Append("{\"result\":\"1\",\"totalcount\":\"" + pageCount + "\",\"list\":[");
                foreach (WXUserPrizeListInfo temp in list)
                {
                    if (index == list.Count())
                    {
                        sb.Append("{\"PrizeName\":\"" + temp.PrizeName + "\",\"Description\":\"" + Tool.SubHtmlString.NoHTML(temp.Description)
                            + "\",\"CreateDate\":\"" + temp.CreateDate.ToString("yyyy-MM-dd") + "\"}]}");
                    }
                    else
                    {
                        sb.Append("{\"PrizeName\":\"" + temp.PrizeName + "\",\"Description\":\"" + Tool.SubHtmlString.NoHTML(temp.Description)
                            + "\",\"CreateDate\":\"" + temp.CreateDate.ToString("yyyy-MM-dd") + "\"},");
                    }
                    index++;
                }
            }
            else
            {
                sb.Append("{\"result\":\"0\",\"totalcount\":\"" + pageCount + "\"}");
            }
            this.Context.Response.Write(sb.ToString());
            this.Context.Response.End();
        }
        /// <summary>
        /// 精美礼品
        /// </summary>
        public void GetGift()
        {
            int pageindex = Tool.SafeConvert.ToInt32(Context.Request.Form["pageIndex"], 1);
            string orderField = Tool.SafeConvert.ToString(WEBRequest.GetString("orderField"), "CreateDate");
            string orderType = Tool.SafeConvert.ToString(WEBRequest.GetString("orderType"), "desc");
            int isUsed = Tool.SafeConvert.ToInt32(WEBRequest.GetString("isUsed"), 1);
            if (pageindex < 1)
            {
                pageindex = 1;
            }

            StringBuilder sb = new StringBuilder();
            List<WXUserPrizeListInfo> list = WXGetUserPrizeList(UserId, "6", pageindex, pagesize, orderField, orderType, isUsed, out totalItemCount).ToList();
            if (list != null && list.Count > 0)
            {
                foreach (var item in list)
                {
                    if (item.IsReceive == false && item.ReceiveEndDate.HasValue &&
                        item.ReceiveEndDate.Value < DateTime.Now)//已过期
                    {
                        item.IsUsed = 2;
                    }
                }
            }

            int pageCount = GetPageCount();

            if (list != null && list.Count() > 0)
            {
                int index = 1;
                string ReceiveDateStr = "";//领取过期时间
                sb.Append("{\"result\":\"1\",\"totalcount\":\"" + pageCount + "\",\"list\":[");
                foreach (WXUserPrizeListInfo temp in list)
                {
                    int IsReceive = temp.IsReceive ? 1 : 0;
                    int IsExpired = 0;
                    if (temp.IsReceive == false && temp.ReceiveEndDate.HasValue && temp.ReceiveEndDate.Value < DateTime.Now)
                        IsExpired = 1;

                    if (temp.ReceiveEndDate.HasValue && DateTime.Now < temp.ReceiveEndDate.Value)
                    {
                        ReceiveDateStr = string.Format("（领取时间剩{0}天）", MyDateTime.DateDiff(MyDateTime.DateDiffOption.Day, DateTime.Now, temp.ReceiveEndDate.Value));
                    }

                    sb.Append("{\"Id\":\"" + temp.Id + "\",\"PrizeName\":\"" + temp.PrizeName + "\",\"Description\":\"" + temp.Description +
                                 "\",\"IsExpired\":\"" + IsExpired + "\",\"IsReceive\":\"" + IsReceive +
                                 "\",\"SourceFrom\":\"" + temp.SourceFrom +
                                 "\",\"ReceiveDateStr\":\"" + ReceiveDateStr +
                                 "\",\"LogisticStatus\":\"" + temp.LogisticStatus + "\",\"OrderId\":\"" + temp.OrderId);

                    if (index == list.Count())
                    {
                        sb.Append("\"}]}");
                    }
                    else
                    {
                        sb.Append("\"},");
                    }
                    index++;
                }
            }
            else
            {
                sb.Append("{\"result\":\"0\",\"totalcount\":\"" + pageCount + "\"}");
            }
            this.Context.Response.Write(sb.ToString());
            this.Context.Response.End();
        }
        /// <summary>
        /// 彩票
        /// </summary>
        public void GetLottery()
        {
            int pageindex = Tool.SafeConvert.ToInt32(Context.Request.Form["pageIndex"], 1);
            string orderField = Tool.SafeConvert.ToString(WEBRequest.GetString("orderField"), "CreateDate");
            string orderType = Tool.SafeConvert.ToString(WEBRequest.GetString("orderType"), "desc");
            int isUsed = Tool.SafeConvert.ToInt32(WEBRequest.GetString("isUsed"), 1);
            if (pageindex < 1)
            {
                pageindex = 1;
            }

            StringBuilder sb = new StringBuilder();
            List<WXUserPrizeListInfo> list = WXGetUserPrizeList(UserId, "5", pageindex, pagesize, orderField, orderType, isUsed, out totalItemCount).ToList();
            foreach (WXUserPrizeListInfo item in list)
            {
                if (item.Description.Contains("|"))
                {
                    string[] Strs = item.Description.Split(new char[] { '|' });
                    item.Description = Strs[1];
                }
            }

            int pageCount = GetPageCount();

            if (list != null && list.Count() > 0)
            {
                int index = 1;
                sb.Append("{\"result\":\"1\",\"totalcount\":\"" + pageCount + "\",\"list\":[");
                foreach (WXUserPrizeListInfo temp in list)
                {
                    if (index == list.Count())
                    {
                        sb.Append("{\"PrizeName\":\"" + temp.PrizeName + "\",\"Description\":\"" + temp.Description
                            + "\"}]}");
                    }
                    else
                    {
                        sb.Append("{\"PrizeName\":\"" + temp.PrizeName + "\",\"Description\":\"" + temp.Description
                            + "\"},");
                    }
                    index++;
                }
            }
            else
            {
                sb.Append("{\"result\":\"0\",\"totalcount\":\"" + pageCount + "\"}");
            }
            this.Context.Response.Write(sb.ToString());
            this.Context.Response.End();
        }
        /// <summary>
        /// 补签卡
        /// </summary>
        public void GetSignCard()
        {
            int pageindex = Tool.SafeConvert.ToInt32(Context.Request.Form["pageIndex"], 1);
            string orderField = Tool.SafeConvert.ToString(WEBRequest.GetString("orderField"), "CreateDate");
            string orderType = Tool.SafeConvert.ToString(WEBRequest.GetString("orderType"), "desc");
            int isUsed = Tool.SafeConvert.ToInt32(WEBRequest.GetString("isUsed"), 1);
            if (pageindex < 1)
            {
                pageindex = 1;
            }

            StringBuilder sb = new StringBuilder();
            List<WXUserPrizeListInfo> list = WXGetUserPrizeList(UserId, "4", pageindex, pagesize, orderField, orderType, isUsed, out totalItemCount).ToList();

            int pageCount = GetPageCount();

            if (list != null && list.Count() > 0)
            {
                int index = 1;


                list.RemoveAll(p => p.IsUsed == 1);

                if (list.Count == 0)
                {
                    sb.Append("{\"result\":\"0\",\"totalcount\":\"" + pageCount + "\"}");
                }
                else
                {
                    sb.Append("{\"result\":\"1\",\"totalcount\":\"" + pageCount + "\",\"list\":[");
                    foreach (WXUserPrizeListInfo temp in list)
                    {
                        if (index == list.Count())
                        {
                            sb.Append("{\"TypeId\":\"" + temp.TypeId
                                + "\"}]}");
                        }
                        else
                        {
                            sb.Append("{\"TypeId\":\"" + temp.TypeId
                                + "\"},");
                        }
                        index++;
                    }
                }
            }
            else
            {
                sb.Append("{\"result\":\"0\",\"totalcount\":\"" + pageCount + "\"}");
            }
            this.Context.Response.Write(sb.ToString());
            this.Context.Response.End();
        }
        /// <summary>
        /// 提现劵
        /// </summary>
        public void GetTicket()
        {
            int pageindex = Tool.SafeConvert.ToInt32(Context.Request.Form["pageIndex"], 1);
            string orderField = Tool.SafeConvert.ToString(WEBRequest.GetString("orderField"), "CreateDate");
            string orderType = Tool.SafeConvert.ToString(WEBRequest.GetString("orderType"), "desc");
            int isUsed = Tool.SafeConvert.ToInt32(WEBRequest.GetString("isUsed"), 1);
            if (pageindex < 1)
            {
                pageindex = 1;
            }
            StringBuilder sb = new StringBuilder();
            List<WXUserPrizeListInfo> list = WXGetUserPrizeList(UserId, "3", pageindex, pagesize, orderField, orderType, isUsed, out totalItemCount).ToList();

            #region 过期
            List<WXUserPrizeListInfo> temp = list.Where(p => p.ActivityCode == "20141016" && p.IsReceive == false).ToList();
            if (temp.Count > 0)
            {
                foreach (WXUserPrizeListInfo item in temp)
                {
                    list.Remove(item);
                    totalItemCount--;
                }
            }
            foreach (WXUserPrizeListInfo item in list)
            {
                if ((item.IsUsed ?? 0) == 1)
                {
                    item.IsUsed = 1;//已使用
                }
                else
                {
                    if (item.IsReceive == false && item.ReceiveEndDate.HasValue && item.ReceiveEndDate < DateTime.Now)
                    {
                        item.IsUsed = 2; //领取已过期
                    }
                    if (item.IsReceive == true && item.ExpirationDate.HasValue && item.ExpirationDate < DateTime.Now)
                        item.IsUsed = 2;//使用已过期
                    if ((item.IsUsed ?? 0) != 2 && (item.ReceiveDate == null || !item.ReceiveDate.HasValue))
                        item.IsUsed = 0; //未使用
                }
            }
            #endregion

            int pageCount = GetPageCount();

            if (list != null && list.Count() > 0)
            {
                int index = 1;
                sb.Append("{\"result\":\"1\",\"totalcount\":\"" + pageCount + "\",\"list\":[");


                foreach (WXUserPrizeListInfo model in list)
                {
                    string ExpStr = "";
                    string ReceiveDateStr = "";
                    string CreateDateStr = string.Format("{0}获得", model.CreateDate.ToString("yyyy-MM-dd"));
                    if (model.ExpirationDate.HasValue && DateTime.Now < model.ExpirationDate.Value)
                    {
                        ExpStr = string.Format("（{0}天后到期）", MyDateTime.DateDiff(MyDateTime.DateDiffOption.Day, DateTime.Now, model.ExpirationDate.Value));
                    }
                    if (model.ExpirationDate.HasValue && DateTime.Now > model.ExpirationDate.Value)
                    {
                        ExpStr = string.Format("（{0}过期）", model.ExpirationDate.Value.ToString("yyyy-MM-dd"));
                    }
                    if (model.ReceiveEndDate.HasValue && DateTime.Now < model.ReceiveEndDate.Value)
                    {
                        ReceiveDateStr = string.Format("（领取时间剩{0}天）", MyDateTime.DateDiff(MyDateTime.DateDiffOption.Day, DateTime.Now, model.ReceiveEndDate.Value));
                    }
                    if (model.ReceiveDate.HasValue)
                    {
                        ReceiveDateStr = string.Format("（{0}使用）", model.ReceiveDate.Value.ToString("yyyy-MM-dd"));
                    }

                    sb.Append("{\"PrizeName\":\"" + model.PrizeName + "\",\"Description\":\"" + Tool.SubHtmlString.NoHTML(model.Description) + "\",\"PrizeValue\":\"" + ToolStatus.DeleteZero(model.PrizeValue)
                            + "\",\"IsUsed\":\"" + (model.IsUsed ?? 0)
                            + "\",\"SourceFrom\":\"" + model.SourceFrom
                            + "\",\"Receive\":\"" + (model.IsReceive ? 1 : 0)
                            + "\",\"ExpStr\":\"" + ExpStr
                            + "\",\"ReceiveDateStr\":\"" + ReceiveDateStr
                            + "\",\"UseBeginDate\":\"" + (model.UseBeginDate.HasValue ? model.UseBeginDate.Value.ToString("yyyy.MM.dd") : "")
                            + "\",\"UseEndDate\":\"" + (model.ExpirationDate.HasValue ? model.ExpirationDate.Value.ToString("yyyy.MM.dd") : "")
                            + "\",\"Id\":\"" + model.Id + "\",\"CreateDateStr\":\"" + CreateDateStr);

                    if (index == list.Count())
                    {
                        sb.Append("\"}]}");
                    }
                    else
                    {
                        sb.Append("\"},");
                    }
                    index++;
                }
            }
            else
            {
                sb.Append("{\"result\":\"0\",\"totalcount\":\"" + pageCount + "\"}");
            }
            this.Context.Response.Write(sb.ToString());
            this.Context.Response.End();
        }
        /// <summary>
        /// 红包 2016-9-18
        /// </summary>
        public void GetRedPacketNew()
        {
            int pageindex = Tool.SafeConvert.ToInt32(WEBRequest.GetString("Pageindex"), 1);
            string type = Tool.SafeConvert.ToString(WEBRequest.GetString("type"), "");
            string orderField = Tool.SafeConvert.ToString(WEBRequest.GetString("orderField"), "CreateDate");
            string orderType = Tool.SafeConvert.ToString(WEBRequest.GetString("orderType"), "desc");
            int isUsed = Tool.SafeConvert.ToInt32(WEBRequest.GetString("isUsed"), 1);
            if (pageindex < 1)
            {
                pageindex = 1;
            }
            StringBuilder sb = new StringBuilder();
            List<WXUserPrizeListInfoNB> list = RedWXGetUserPrizeList(UserId, type, pageindex, pagesize, orderField, orderType, isUsed, out totalItemCount).ToList();

            #region 过期
            List<WXUserPrizeListInfoNB> temp = list.Where(p => p.ActivityCode == "20141016" && p.IsReceive == false).ToList();
            if (temp.Count > 0)
            {
                foreach (WXUserPrizeListInfoNB item in temp)
                {
                    list.Remove(item);
                    totalItemCount--;
                }
            }
            //
            if (type == "1")//现金红包
            {
                DateTime addTime = bll.WXGetAddDate(UserId);//注册日期
                foreach (WXUserPrizeListInfoNB item in list)
                {
                    //注册红包过期 
                    if (item.TypeId == 14 && item.SubTypeId != 19 && item.ExpirationDate == null && item.IsReceive == false && addTime < DateTime.Now.AddMonths(-1))
                        item.IsUsed = 2;
                    if (item.TypeId == 14 && item.SubTypeId != 19 && item.ExpirationDate != null && item.IsReceive == false && DateTime.Now > Tool.SafeConvert.ToDateTime(item.ReceiveEndDate))
                        item.IsUsed = 2;

                    if (item.TypeId == 14 && item.SubTypeId == 19 && DateTime.Now > Tool.SafeConvert.ToDateTime(item.ReceiveEndDate) && item.ReceiveDate == null)
                        item.IsUsed = 2;
                    //现金红包
                    if (item.TypeId.ToText().IsIn("11", "13"))
                    {
                        if (item.IsReceive == false && item.ReceiveEndDate.HasValue && DateTime.Now > item.ReceiveEndDate.Value)
                            item.IsUsed = 2;
                        if (item.IsReceive && item.IsUsed == 0 && item.ExpirationDate.HasValue && DateTime.Now > item.ExpirationDate.Value)
                        {
                            item.IsUsed = 2;
                        }
                    }
                }

            }
            if (type == "2")//投资红包
            {
                foreach (WXUserPrizeListInfoNB item in list)
                {
                    //愚人节活动过期
                    if (item.TypeId == 3 && item.SubTypeId == 10 && item.IsReceive == false && DateTime.Now > DateTime.Parse("2015-04-30 23:59:59"))
                        item.IsUsed = 2;

                    //加入领取过期判断
                    if (item.TypeId == 3 && item.IsReceive == false && item.ReceiveEndDate != null && DateTime.Now > Tool.SafeConvert.ToDateTime(item.ReceiveEndDate))
                        item.IsUsed = 2;
                    //加入使用过期判断
                    if (item.TypeId == 3 && item.IsReceive && (item.IsUsed ?? 0) == 0 && item.ExpirationDate != null && DateTime.Now > Tool.SafeConvert.ToDateTime(item.ExpirationDate))
                        item.IsUsed = 2;

                    //投资金币过期
                    if (item.TypeId == 12 && item.IsUsed == 0 && DateTime.Now > DateTime.Parse("2014-12-19"))
                        item.IsUsed = 2;
                    //体验金过期
                    if (item.TypeId == 16 && item.IsUsed == 0 && DateTime.Now > Tool.SafeConvert.ToDateTime(item.ReceiveEndDate))
                        item.IsUsed = 2;
                }
            }
            //投资体验金
            if (type == "7")
            {
                foreach (WXUserPrizeListInfoNB item in list)
                {
                    //加入领取过期判断
                    if (item.TypeId == 16 && item.IsReceive == false && item.ReceiveEndDate != null && DateTime.Now > Tool.SafeConvert.ToDateTime(item.ReceiveEndDate))
                        item.IsUsed = 2;
                    //加入使用过期判断
                    if (item.TypeId == 16 && item.IsReceive && (item.IsUsed ?? 0) == 0 && item.ExpirationDate != null && DateTime.Now > Tool.SafeConvert.ToDateTime(item.ExpirationDate))
                        item.IsUsed = 2;
                }
            }
            #endregion

            int pageCount = GetPageCount();

            if (list != null && list.Count() > 0)
            {
                int index = 1;
                sb.Append("{\"result\":\"1\",\"totalcount\":\"" + pageCount + "\",\"list\":[");
                foreach (WXUserPrizeListInfoNB model in list)
                {
                    string receive = model.IsReceive == false ? "0" : "1";
                    int subTypeId = model.SubTypeId == null ? 0 : (int)model.SubTypeId;

                    string ExpStr = "";
                    string ReceiveDateStr = "";
                    string CreateDateStr = string.Format("{0}获得", model.CreateDate.ToString("yyyy-MM-dd"));

                    if (model.ExpirationDate.HasValue && DateTime.Now < model.ExpirationDate.Value)
                    {
                        var diffDay = MyDateTime.DateDiff(MyDateTime.DateDiffOption.Day, DateTime.Now,
                            model.ExpirationDate.Value);
                        if (diffDay == 0)
                        {
                            ExpStr = string.Format("（今天到期）");
                        }
                        else
                        {
                            ExpStr = string.Format("（{0}天后到期）", diffDay);
                        }

                    }
                    if (model.ExpirationDate.HasValue && DateTime.Now > model.ExpirationDate.Value)
                    {
                        ExpStr = string.Format("（{0}过期）", model.ExpirationDate.Value.ToString("yyyy-MM-dd"));
                    }
                    if (model.ReceiveEndDate.HasValue && DateTime.Now < model.ReceiveEndDate.Value)
                    {
                        ReceiveDateStr = string.Format("（领取时间剩{0}天）", MyDateTime.DateDiff(MyDateTime.DateDiffOption.Day, DateTime.Now, model.ReceiveEndDate.Value));
                    }
                    if (model.ReceiveDate.HasValue)
                    {
                        ReceiveDateStr = string.Format("（{0}使用）", model.ReceiveDate.Value.ToString("yyyy-MM-dd"));
                    }
                    var ExperienceModel = new ExperienceGoldOrder();
                    if (model.TypeId == 16 && model.SubTypeId == 1)
                    {
                        string ExperienceSql = "SELECT ego.Id,ego.Amount,ego.Profit,ego.UseEndDate FROM ExperienceGoldOrder ego WHERE ego.ActivityCode=@ActivityCode";
                        var ExperienceParam = new Dapper.DynamicParameters();
                        ExperienceParam.Add("@ActivityCode", model.ActivityCode);
                        ExperienceModel = TuanDai.DB.MySql.TuanDaiDB_MySql.QueryFirstOrDefault<ExperienceGoldOrder>(TdConfig.ApplicationName, TdConfig.DBUserManageWrite, ExperienceSql, ref ExperienceParam);
                        TimeSpan ts = new TimeSpan();
                        ts = model.ExpirationDate.Value.Subtract(model.UseBeginDate.Value);
                        ExperienceModel.Days = (ts.Days+1).ToString();
                    }
                    sb.Append("{\"PrizeName\":\"" + model.PrizeName + "\",\"Description\":\"" + Tool.SubHtmlString.NoHTML(model.Description) + "\",\"PrizeValue\":\"" + ToolStatus.DeleteZero(model.PrizeValue)
                           + "\",\"IsUsed\":\"" + model.IsUsed + "\",\"Id\":\"" + model.Id + "\",\"Receive\":\"" + receive
                           + "\",\"SourceFrom\":\"" + model.SourceFrom
                           + "\",\"ExpStr\":\"" + ExpStr
                           + "\",\"ReceiveDateStr\":\"" + ReceiveDateStr
                           + "\",\"InvestMoney\":\"" + ToolStatus.DeleteZero(model.InvestMoney)
                           + "\",\"TypeId\":\"" + model.TypeId + "\",\"SubTypeId\":\"" + subTypeId + "\",\"CreateDateStr\":\"" + CreateDateStr + "\",\"TiYanJinId\":\"" + ExperienceModel.Id + "\",\"TiYanJinE\":\"" + ExperienceModel.Amount + "\",\"TiYanJinProfit\":\"" + ExperienceModel.Profit + "\",\"Days\":\"" + ExperienceModel.Days);

                    if (index == list.Count())
                    {
                        sb.Append("\"}]}");
                    }
                    else
                    {
                        sb.Append("\"},");
                    }
                    index++;
                }
            }
            else
            {
                sb.Append("{\"result\":\"0\",\"totalcount\":\"" + pageCount + "\"}");
            }
            this.Context.Response.Write(sb.ToString());
            this.Context.Response.End();
        }
        public void GetRateCoupon()
        {
            int pageindex = Tool.SafeConvert.ToInt32(WEBRequest.GetString("Pageindex"), 1);
            string orderField = Tool.SafeConvert.ToString(WEBRequest.GetString("orderField"), "CreateDate");
            string orderType = Tool.SafeConvert.ToString(WEBRequest.GetString("orderType"), "desc");
            int isUsed = Tool.SafeConvert.ToInt32(WEBRequest.GetString("isUsed"), 1);
            if (pageindex < 1)
            {
                pageindex = 1;
            }
            List<RateCoupon> list = RateCouponList(UserId, pageindex, pagesize, orderField, orderType, isUsed, out totalItemCount).ToList();


            int pageCount = 1;
            StringBuilder sb = new StringBuilder();
            if (list != null && list.Count > 0)
            {
                foreach (var item in list)
                {
                    if (item.IsUsed == 1)
                    {
                        item.IsUsed = 1;//已使用
                    }
                    else
                    {
                        if (item.IsReceive == 0 && item.ReceiveEndDate.HasValue && item.ReceiveEndDate < DateTime.Now)
                        {
                            item.IsUsed = 2; //领取已过期
                        }
                        if (item.IsReceive == 1 && item.ExpirationDate.HasValue && item.ExpirationDate < DateTime.Now)
                            item.IsUsed = 2;//使用已过期
                        if (item.IsUsed != 2 && item.ReceiveDate == null)
                            item.IsUsed = 0; //未使用
                    }
                }

                pageCount = GetPageCount();

                if (list.Count > 0)
                {
                    int index = 1;
                    sb.Append("{\"result\":\"1\",\"pageCount\":\"" + pageCount + "\",\"list\":[");
                    foreach (var item in list)
                    {
                        string ExpirationStr = "";
                        string ReceiveDateStr = "";//领取过期时间
                        string CreateDateStr = "";
                        string DeadlineStr = "";
                        CreateDateStr = string.Format("{0}获得", item.CreateDate.ToString("yyyy-MM-dd"));
                        if (item.ExpirationDate.HasValue && DateTime.Now < item.ExpirationDate.Value)
                        {
                            ExpirationStr = "（" + MyDateTime.DateDiff(MyDateTime.DateDiffOption.Day, DateTime.Now, item.ExpirationDate.Value) + "天后到期）";
                        }
                        if (item.ExpirationDate.HasValue && DateTime.Now > item.ExpirationDate.Value)
                        {
                            ExpirationStr = string.Format("（{0}过期）", item.ExpirationDate.Value.ToString("yyyy-MM-dd"));
                        }
                        if (item.ReceiveEndDate.HasValue && DateTime.Now < item.ReceiveEndDate.Value)
                        {
                            ReceiveDateStr = string.Format("（领取时间剩{0}天）", MyDateTime.DateDiff(MyDateTime.DateDiffOption.Day, DateTime.Now, item.ReceiveEndDate.Value));
                        }
                        if (item.ReceiveDate.HasValue && item.ExpirationDate.HasValue)
                        {
                            ReceiveDateStr = string.Format("（{0}使用）", item.ReceiveDate.Value.ToString("yyyy-MM-dd"));
                            DeadlineStr = string.Format("{0}~{1}", item.ReceiveDate.Value.ToString("yyyy-MM-dd"),
                                item.ExpirationDate.Value.ToString("yyyy-MM-dd"));
                        }
                        sb.Append("{\"PrizeName\":\"" + item.PrizeName + "\",\"ExpirationStr\":\"" + ExpirationStr + "\",\"Description\":\"" + Tool.StringUtilily.Left(item.Description, 80)
                                   + "\",\"IsUsed\":\"" + item.IsUsed + "\",\"PrizeValue\":\"" + item.PrizeValue + "\",\"Receive\":\"" + item.IsReceive
                                   + "\",\"Id\":\"" + item.Id + "\",\"SourceFrom\":\"" + Tool.StringUtilily.Left(item.SourceFrom, 18)
                                   + "\",\"ReceiveDateStr\":\"" + ReceiveDateStr + "\",\"CreateDateStr\":\"" + CreateDateStr + "\",\"DeadlineStr\":\"" + DeadlineStr
                                   );
                        if (index == list.Count())
                        {
                            sb.Append("\"}]}");
                        }
                        else
                        {
                            sb.Append("\"},");
                        }
                        index++;
                    }
                }
                else
                {
                    sb.Append("{\"result\":\"0\",\"pageCount\":\"" + pageCount + "\"}");
                }
            }
            else
            {
                sb.Append("{\"result\":\"0\",\"pageCount\":\"" + pageCount + "\"}");
            }
            this.Context.Response.Write(sb.ToString());
            this.Context.Response.End();
        }
        /// <summary>
        /// 得到页数
        /// </summary>
        /// <returns></returns>
        public int GetPageCount()
        {
            double divide = totalItemCount / pagesize;
            double floor = System.Math.Floor(divide);
            if (totalItemCount % pagesize != 0)
                floor++;
            int pageCount = Convert.ToInt32(floor);//总页数
            return pageCount;
        }

        #region 领取奖品
        /// <summary>
        /// 用户获取奖品
        /// </summary>
        public void GetUserPrize()
        {
            Guid userid = WebUserAuth.UserId.Value;
            Guid id = Guid.Parse(Context.Request["id"]);
            int outStatus = 0;
            WXUserPrizeListInfo model = bll.WXGetUserPrizeById(id);
            if (model == null)
            {
                PrintJson("0", "操作失败");
                return;
            }
            if (model.Description.IndexOf("恶意注册，不允许领取") > -1)
            {
                PrintJson("0", "操作失败");
                return;
            }
            if (model.IsReceive)
            {
                PrintJson("-3", "已经领取");
                return;
            }
            UserBasicInfoInfo usermodel = bll.GetUserBasicInfoModelById(userid);
            if (usermodel == null)
            {
                PrintJson("0", "操作失败");
                return;
            }
            if (!usermodel.IsValidateMobile || !usermodel.IsValidateIdentity)
            {
                PrintJson("-2", "未安全认证");
                return;
            }
            int UserPrizeType = (int)ConstString.UserPrizeType.promotion;
            DateTime time = DateTime.Now;
            if (model.TypeId == UserPrizeType && model.ActivityCode.IndexOf("promotion_20141114") > -1 && model.CreateDate.AddDays(2) > time)
            {
                PrintJson("-18", "");
                return;
            }
            if (model != null && model.TypeId != 5 && model.TypeId != 9 && model.TypeId != 10)
            {
                //model.RuleId
                bll.GetUserPrize(userid, id, 2, out outStatus);//调用新的领取过程 


                //红包领取成功,发送微信推送消息 allen 2015-08-04
                //if (model.TypeId.ToString().IsIn("3;4;11;13;14")&& outStatus == 1) {
                //    BusinessDll.WXTemplateMessage wxSend = new BusinessDll.WXTemplateMessage(BusinessDll.WXTemplateMessage.PlatFormType.WeiXin, WebUserAuth.UserId.Value);
                //    wxSend.SendGetRedPacket(model.Description, model.PrizeValue);
                //}
                string investMoneyType = "";
                //当为现金红包时才查询需投资金额
                if (outStatus == 1 && model.TypeId == 3 && model.RuleId.HasValue && model.RuleId.Value != Guid.Empty)
                {
                    Tuple<int, decimal> investMoneyObj = bll.WXGetRedPacketInvestMoney(model.RuleId.Value);
                    investMoneyType = "{ \"InvestType\":" + investMoneyObj.Item1 + ",\"InvestMoney\":" + investMoneyObj.Item2 + "}";
                }
                PrintJson(outStatus.ToString(), investMoneyType);
            }
            else if (model != null && model.TypeId == 9)
            {
                #region 实物奖品
                #endregion
            }
            else if (model != null && model.TypeId == 5)//送彩票
            {
                #region 彩票
                #endregion
            }
            else if (model != null && model.TypeId == 10)//领取云购币
            {
                #region 云购币
                #endregion
            }
            else
            {
                PrintJson("0", "用户领取奖品失败");
            }
        }
        #endregion

        #region 团宝箱领取商城礼品
        public void GetMallUserPrize()
        {
            Guid userid = WebUserAuth.UserId.Value;
            Guid id = Guid.Parse(Context.Request["id"]);

            int outStatus = 0;
            UserBLL bll = new UserBLL();
            //ObjectParameter outStatus = new ObjectParameter("outStatus", 0);
            //UserPrize model = db.UserPrize.FirstOrDefault(p => p.Id == id && p.IsReceive == false);
            var model = new UserPrizeBll().GetUserPrizeById(id);
            if (model == null)
            {
                PrintJson("-1", "奖品已领取");
                return;
            }
            if (model.Description.IndexOf("恶意注册，不允许领取") > -1)
            {
                PrintJson("0", "操作失败");
                return;
            }
            UserBasicInfoInfo usermodel = bll.GetUserBasicInfoModelById(userid);

            if (!usermodel.IsValidateMobile || !usermodel.IsValidateIdentity)
            {
                PrintJson("-2", "操作失败");
                return;
            }

            if (model != null && model.TypeId == 9)
            {
                if ((usermodel.IsValidateIdentity && usermodel.IsValidateMobile) == false)
                {

                    this.PrintJson("-2", "未完成实名认证！");
                    return;
                }

                bll.GetUserPrize(userid, id, 2, out outStatus);
                if (outStatus == 1)
                {
                    var lbll = new LogisticBLL();
                    var pra = new ProductReceiveAddress();
                    pra.Status = 1;
                    pra.OrderId = Guid.NewGuid();
                    pra.UserId = UserId;
                    pra.UserPrizeId = Guid.Parse(Context.Request["id"]);
                    pra.Address = Context.Request["address"];
                    pra.Privince = Context.Request["sel_city1"];
                    pra.Area = Context.Request["sel_city3"];
                    pra.City = Context.Request["sel_city2"];
                    pra.TelNo = Context.Request["phone"];
                    pra.UserName = Context.Request["name"];
                    int result = lbll.addProductReceiveAddress(pra);
                    if (result > 0)
                    {
                        string message = string.Empty;
                        PrintJson(outStatus.ToString(), message);
                    }
                    else
                    {
                        PrintJson("0", "领取奖品失败！");
                    }

                }
                else
                {
                    PrintJson(outStatus.ToString(), string.Empty);
                }
            }
            else
            {
                PrintJson("0", "用户领取奖品失败");
            }
        }
        #endregion

        //团宝箱精美礼品获取城市
        public void GetCity()
        {
            StringBuilder sb = new StringBuilder();
            string type = Context.Request.Form["vtype"].ToString();
            int parentId = Tool.SafeConvert.ToInt32(Context.Request.Form["id"], 1);
            List<AddressInfo> list = null;
            //using (SqlConnection connection = TuanDai.PortalSystem.DAL.PubConstant.CrateReadConnection())
            //{
            string sqlText = string.Empty;
            //var para = new { Id = parentId };
            var para = new Dapper.DynamicParameters();
            para.Add("@Id", parentId);
            if (type == "1")
                sqlText = @"SELECT m_CityID AS ProId,m_CityName AS ProName FROM dbo.t_Mall_City with(nolock) WHERE m_ProId=@Id";
            else if (type == "2")
                sqlText = @"SELECT m_Id AS ProId,m_DisName AS ProName FROM dbo.t_Mall_District with(nolock) WHERE m_CityID=@Id";
            list = TuanDai.DB.TuanDaiDB.Query<AddressInfo>(TdConfig.DBRead, sqlText, ref para);
            //    list = SqlMapper.Query<AddressInfo>(connection, sqlText, para).ToList();
            //    connection.Close();
            //    connection.Dispose();
            //}
            if (list != null && list.Count() > 0)
            {
                int index = 1;
                sb.Append("{\"result\":\"1\",\"list\":[");
                foreach (AddressInfo model in list)
                {
                    if (index == list.Count())
                    {
                        sb.Append("{\"ProId\":\"" + model.ProId + "\",\"ProName\":\"" + model.ProName + "\"}]}");
                    }
                    else
                    {
                        sb.Append("{\"ProId\":\"" + model.ProId + "\",\"ProName\":\"" + model.ProName + "\"},");
                    }
                    index++;
                }
            }
            else
            {
                sb.Append("{\"result\":\"0\"}");
            }
            this.Context.Response.Write(sb.ToString());
            this.Context.Response.End();
        }
        /// <summary>
        /// 列表
        /// </summary>
        /// <param name="UserId"></param>
        /// <param name="type"></param>
        /// <returns></returns>
        public IList<WXUserPrizeListInfo> WXGetUserPrizeList(Guid UserId, string type, int pageIndex, int pageSize, string orderField, string orderType, int isUsed, out int totalItemCount)
        {
            IList<WXUserPrizeListInfo> list;
            totalItemCount = 0;
            //using (SqlConnection connection = PubConstant.CrateReadConnection())
            //{
            string historyDate = ConfigHelper.getConfigString("UserPrizeHistory");

            var paras = new Dapper.DynamicParameters();
            paras.Add("@userId", UserId);
            paras.Add("@historyDate", historyDate.IsEmpty() ? DateTime.Today.AddMonths(-2).ToString("yyyy-MM-dd") : historyDate);

            string sqlText = @"SELECT Id ,UserId ,TypeId ,SubTypeId ,ActivityCode ,PrizeName ,TargetProductId ,PrizeValue,[Description] ,IsReceive,ReceiveDate ,IsUsed,UseDate,CreateDate ,ExpirationDate,SourceFrom,ReceiveBeginDate,ReceiveEndDate,UseBeginDate,RuleId,ReceiveType,LogisticStatus,OrderId FROM(
                                  SELECT ROW_NUMBER() OVER(ORDER BY {0}) RowNum,up.*,ISNULL(pr.Status,0) as LogisticStatus,pr.OrderId FROM UserPrize up WITH(NOLOCK)  LEFT JOIN dbo.ProductReceiveAddress pr WITH(NOLOCK) ON up.Id = pr.UserPrizeId
                                  WHERE up.UserId=@userId ";

            string sqlCount = "SELECT COUNT(0) FROM UserPrize WITH(NOLOCK) WHERE UserId=@userId ";

            sqlText = string.Format(sqlText, " up." + orderField + " " + orderType + " ");
            if (type == "1")
            {//现金红包
                sqlText += " AND (TypeId =4 OR TypeId=11  OR TypeId=13  OR TypeId=14)";
                sqlCount += " AND (TypeId =4 OR TypeId=11  OR TypeId=13  OR TypeId=14)";
            }
            else if (type == "2")
            {//投资红包
                sqlText += " AND (TypeId =3 OR TypeId=12 OR TypeId=16)";
                sqlCount += " AND (TypeId =3 OR TypeId=12 OR TypeId=16)";
            }
            else if (type == "3")
            {//提现券
                sqlText += " AND TypeId =2";
                sqlCount += " AND TypeId =2";
            }
            else if (type == "4")
            {//签到卡
                sqlText += " AND (TypeId =6 OR TypeId=7)";
                sqlCount += " AND (TypeId =6 OR TypeId=7)";
            }
            else if (type == "5")
            {//彩票
                sqlText += " AND TypeId =5 AND IsReceive=1";
                sqlCount += " AND TypeId =5 AND IsReceive=1";
            }
            else if (type == "6")
            {//精美礼品
                sqlText += " AND TypeId =9 AND ISNULL(SubTypeId,0)!=1 ";
                sqlCount += " AND TypeId =9 AND ISNULL(SubTypeId,0)!=1 ";
            }
            if (isUsed == 1)//可使用
            {
                if (type == "1" || type == "6")
                {
                    sqlText += " AND (IsReceive =0 AND Isnull(ReceiveEndDate,getDate()+1) > GETDATE() ) ";
                    sqlCount += " AND (IsReceive =0 AND Isnull(ReceiveEndDate,getDate()+1) > GETDATE())";
                }
                else
                {
                    sqlText += " AND (IsUsed =0 AND Isnull(ExpirationDate,getDate()+1) > GETDATE()) ";
                    sqlCount += " AND (IsUsed =0 AND Isnull(ExpirationDate,getDate()+1) > GETDATE())";
                }
            }
            else if (isUsed == 2)//已失效
            {
                if (type == "1" || type == "6")
                {
                    sqlText += " AND ((IsReceive =0 AND Isnull(ReceiveEndDate,getDate()+1) < GETDATE()) OR (IsReceive = 1))";
                    sqlCount += " AND ((IsReceive =0 AND Isnull(ReceiveEndDate,getDate()+1) < GETDATE()) OR (IsReceive = 1) )";
                }
                else
                {
                    sqlText += " AND ((IsUsed =0 AND Isnull(ExpirationDate,getDate()+1) < GETDATE()) OR (IsUsed != 0)) ";
                    sqlCount += " AND ((IsUsed =0 AND Isnull(ExpirationDate,getDate()+1) < GETDATE()) OR (IsUsed != 0)) ";
                }
            }
            sqlText += ")a  WHERE a.RowNum>" + (pageIndex - 1) * pageSize + " AND a.RowNum<=" + (pageIndex * pageSize);


            totalItemCount = TuanDai.DB.TuanDaiDB.Query<int>(TdConfig.ApplicationName, TdConfig.DBRead, sqlCount, ref paras).Sum();
            list = TuanDai.DB.TuanDaiDB.Query<WXUserPrizeListInfo>(TdConfig.ApplicationName, TdConfig.DBRead, sqlText, ref paras);
            return list;
        }
        /// <summary>
        /// 列表
        /// </summary>
        /// <param name="UserId"></param>
        /// <returns></returns>
        public List<RateCoupon> RateCouponList(Guid UserId, int pageIndex, int pageSize, string orderField, string orderType,
            int isUsed, out int totalItemCount)
        {
            List<RateCoupon> list = new List<RateCoupon>();
            totalItemCount = 0;

            string historyDate = ConfigHelper.getConfigString("UserPrizeHistory");

            var paras = new Dapper.DynamicParameters();
            paras.Add("@userId", UserId);
            paras.Add("@historyDate", historyDate.IsEmpty() ? DateTime.Today.AddMonths(-2).ToString("yyyy-MM-dd") : historyDate);

            string sqlCount = "SELECT COUNT(0) FROM UserPrize WITH(NOLOCK) WHERE UserId=@userId AND TypeId=18 ";
            string sqlText =
                @"SELECT a.Id ,a.UserId ,a.PrizeName ,a.IsReceive ,a.Description ,a.IsUsed ,a.SourceFrom,a.ExpirationDate, a.ReceiveEndDate,a.PrizeValue,a.ReceiveDate,a.CreateDate FROM(" +
                "SELECT ROW_NUMBER() OVER(ORDER BY {0}) RowNum,r.* FROM UserPrize r WITH(NOLOCK) " +
                "WHERE r.UserId=@userId AND r.TypeId=18 ";


            if (isUsed == 1)//可使用
            {
                sqlText += " AND (r.IsUsed =0 AND Isnull(r.ExpirationDate,getDate()+1) > GETDATE()) ";
                sqlCount += " AND (IsUsed =0 AND Isnull(ExpirationDate,getDate()+1) > GETDATE())";
            }
            else if (isUsed == 2)//已失效
            {
                sqlText += " AND ((r.IsUsed =0 AND Isnull(r.ExpirationDate,getDate()+1) < GETDATE()) OR (r.IsUsed != 0)) ";
                sqlCount += " AND ((IsUsed =0 AND Isnull(ExpirationDate,getDate()+1) < GETDATE()) OR (IsUsed != 0)) ";
            }
            sqlText += ")a  WHERE a.RowNum >" + (pageIndex - 1) * pageSize + " AND a.RowNum<=" + (pageIndex * pageSize);


            sqlText = string.Format(sqlText, " r." + orderField + " " + orderType + " ");
            totalItemCount = PublicConn.QuerySingle<int>(sqlCount, ref paras);
            list = PublicConn.QueryBySql<RateCoupon>(sqlText, ref paras);

            return list;
        }
        public List<WXUserPrizeListInfoNB> RedWXGetUserPrizeList(Guid UserId, string type, int pageIndex, int pageSize, string orderField, string orderType, int isUsed, out int totalItemCount)
        {
            List<WXUserPrizeListInfoNB> list;
            totalItemCount = 0;

            string historyDate = ConfigHelper.getConfigString("UserPrizeHistory");

            var paras = new Dapper.DynamicParameters();
            paras.Add("@userId", UserId);
            paras.Add("@historyDate", historyDate.IsEmpty() ? DateTime.Today.AddMonths(-2).ToString("yyyy-MM-dd") : historyDate);
            string sqlText = @"SELECT * FROM(
                                    SELECT ROW_NUMBER() OVER(ORDER BY {0}) RowNum,  prize.Id ,prize.TypeId ,prize.SubTypeId ,prize.PrizeName,prize.ActivityCode ,prize.CreateDate,
                                    prize.PrizeValue,prize.[Description] ,prize.IsReceive,prize.ReceiveDate ,prize.IsUsed ,prize.ExpirationDate, prize.SourceFrom, prize.ReceiveBeginDate, 
                                    prize.ReceiveEndDate,prize.UseBeginDate, case when isnull(act.InvestMoney,0)>0 then act.InvestMoney else act.TotalInvest end as InvestMoney
                                    FROM UserPrize prize  WITH(NOLOCK)
                                   left join UserPrize_Activity act  WITH(NOLOCK) on act.Id=prize.RuleId 
                                    WHERE prize.UserId=@userId ";

            string sqlCount = "SELECT COUNT(0) FROM UserPrize WITH(NOLOCK) WHERE UserId=@userId ";


            sqlText = string.Format(sqlText, " prize." + orderField + " " + orderType + " ");

            if (type == "1")
            {//现金红包
                sqlText += " AND (prize.TypeId =4 OR prize.TypeId=11  OR prize.TypeId=13  OR prize.TypeId=14)";
                sqlCount += " AND (TypeId =4 OR TypeId=11  OR TypeId=13  OR TypeId=14)";
            }
            else if (type == "2")
            {//投资红包
                sqlText += " AND (prize.TypeId =3 OR prize.TypeId=12 )";
                sqlCount += " AND (TypeId =3 OR TypeId=12 )";
            }
            else if (type == "3")
            {//提现券
                sqlText += " AND prize.TypeId =2";
                sqlCount += " AND TypeId =2";
            }
            else if (type == "4")
            {//签到卡
                sqlText += " AND (prize.TypeId =6 OR prize.TypeId=7)";
                sqlCount += " AND (TypeId =6 OR TypeId=7)";
            }
            else if (type == "5")
            {//彩票
                sqlText += " AND prize.TypeId =5 AND prize.IsReceive=1";
                sqlCount += " AND TypeId =5 AND IsReceive=1";
            }
            else if (type == "6")
            {//精美礼品
                sqlText += " AND prize.TypeId =9";
                sqlCount += " AND TypeId =9";
            }//体验券
            else if (type == "7")
            {
                sqlText += " AND  prize.TypeId=16";
                sqlCount += " AND TypeId=16";
            }
            if (isUsed == 1)//可使用
            {
                if (type == "1" || type == "6")
                {
                    sqlText += " AND (prize.IsReceive =0 AND Isnull(prize.ReceiveEndDate,getDate()+1) > GETDATE() ) ";
                    sqlCount += " AND (IsReceive =0 AND Isnull(ReceiveEndDate,getDate()+1) > GETDATE())";
                }
                else
                {
                    sqlText += " AND (prize.IsUsed =0 AND Isnull(prize.ExpirationDate,getDate()+1) > GETDATE()) ";
                    sqlCount += " AND (IsUsed =0 AND Isnull(ExpirationDate,getDate()+1) > GETDATE())";
                }

            }
            else if (isUsed == 2)//已失效
            {
                if (type == "1" || type == "6")
                {
                    sqlText += " AND ((prize.IsReceive =0 AND Isnull(prize.ReceiveEndDate,getDate()+1) < GETDATE()) OR (prize.IsReceive = 1))";
                    sqlCount += " AND ((IsReceive =0 AND Isnull(ReceiveEndDate,getDate()+1) < GETDATE()) OR (IsReceive = 1) )";
                }
                else
                {
                    sqlText += " AND ((prize.IsUsed =0 AND Isnull(prize.ExpirationDate,getDate()+1) < GETDATE()) OR (prize.IsUsed != 0)) ";
                    sqlCount += " AND ((IsUsed =0 AND Isnull(ExpirationDate,getDate()+1) < GETDATE()) OR (IsUsed != 0)) ";
                }

            }
            sqlText += ")a  WHERE a.RowNum>" + (pageIndex - 1) * pageSize + " AND a.RowNum<=" + (pageIndex * pageSize);

            totalItemCount = PublicConn.QuerySingle<int>(sqlCount, ref paras);

            list = PublicConn.QueryBySql<WXUserPrizeListInfoNB>(sqlText, ref paras);

            return list;
        }


        public class AddressInfo
        {
            public string ProName { get; set; }
            public int ProId { get; set; }
        }
        public class MallResutlInfo
        {
            public string Status { get; set; }
            public string message { get; set; }
        }
        public class ExperienceGoldOrder
        {
            public string Id { get; set; }
            public decimal Amount { get; set; }
            public decimal Profit { get; set; }
            public DateTime UseEndDate { get; set; }
            public string Days { get; set; }
        }
    }
}